name: Message Generator Feature Branch Build

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main
env:
  PACTFLOW_URL: https://bullyrooks.pactflow.io
  PACTFLOW_TOKEN: ${{secrets.PACTFLOW_TOKEN}}
  PACTBROKER_HOST: bullyrooks.pactflow.io

jobs:
  env-vars:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.branch }}
      output2: ${{ steps.step1.outputs.version }}
    steps:
      - id: step1
        name: Set environment variables
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
          echo "::set-output name=branch::$GIT_BRANCH"
          echo "VERSION=$GITHUB_SHA"
          echo "VERSION=$GITHUB_SHA" >> $GITHUB_ENV
          echo "::set-output name=branch::$GITHUB_SHA"

  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Maven Tests
        run: ./mvnw -B test

  contract-test:
    needs:
      - env-vars
    env:
      VERSION: ${{needs.env-vars.outputs.version}}
      GIT_BRANCH: ${{needs.env-vars.outputs.branch}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Create Pact Version Tag
        run: |
          ./mvnw pact:create-version-tag \
          -Dpacticipant=message-generator \
          -DpacticipantVersion=${{ env.VERSION }} \
          -Dtag=initial

      - name: Verify Contract Tests
        run: |
          ./mvnw -B verify -Pcontract \
          -Dpactbroker.host=${{env.PACTBROKER_HOST}} \
          -Dpact.verifier.publishResults=true \
          -Dpact.provider.version=${{env.VERSION}} \
          -Dpact.provider.branch=${{env.GIT_BRANCH}} \
          -Dpact.provider.tag=okteto \
          -DPACT_CONSUMER_SELECTOR_TAG=okteto,pre-okteto
        continue-on-error: true #verify may fail, but we're relying on can-i-deploy to control deploy
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false

  can-i-deploy:
    needs:
      - env-vars
      - contract-test
    env:
      VERSION: ${{needs.env-vars.outputs.version}}
    runs-on: ubuntu-latest
    steps:
      - name: Pact Can-i-deploy
        run: |
          docker run --rm pactfoundation/pact-cli:latest \
          broker can-i-deploy \
          --pacticipant=message-generator  \
          --to-environment=okteto \
          --version=${{ env.VERSION }}  \
          --broker-base-url=${{ env.PACTFLOW_URL }} \
          --broker-token=${{ env.PACTFLOW_TOKEN }}